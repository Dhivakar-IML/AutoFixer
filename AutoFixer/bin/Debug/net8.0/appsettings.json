{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "MongoDB": {
    "ConnectionString": "mongodb://localhost:27017",
    "DatabaseName": "AutoFixer",
    "ErrorEntriesCollection": "ErrorEntries",
    "ErrorClustersCollection": "ErrorClusters",
    "ErrorPatternsCollection": "ErrorPatterns",
    "RootCauseAnalysesCollection": "RootCauseAnalyses",
    "PatternResolutionsCollection": "PatternResolutions",
    "PatternAlertsCollection": "PatternAlerts",
    "ConnectionTimeoutSeconds": 30,
    "SocketTimeoutSeconds": 30,
    "MaxConnectionPoolSize": 100,
    "ServerSelectionTimeoutSeconds": 30,
    "UseSsl": false
  },
  "PatternDetection": {
    "ErrorPatterns": [
      {
        "Id": "MEMORY_LEAK",
        "Name": "Memory Leak Pattern",
        "Pattern": "OutOfMemoryException|memory leak|heap overflow",
        "Severity": "High",
        "Category": "Performance",
        "IsEnabled": true,
        "Description": "Detects potential memory leak patterns in application logs"
      },
      {
        "Id": "SQL_INJECTION",
        "Name": "SQL Injection Pattern",
        "Pattern": "SQL injection|SqlException.*'|union select|drop table",
        "Severity": "Critical",
        "Category": "Security",
        "IsEnabled": true,
        "Description": "Detects potential SQL injection attempts"
      },
      {
        "Id": "AUTHENTICATION_FAILURE",
        "Name": "Authentication Failure",
        "Pattern": "authentication failed|invalid credentials|unauthorized access",
        "Severity": "Medium",
        "Category": "Security",
        "IsEnabled": true,
        "Description": "Detects authentication and authorization failures"
      },
      {
        "Id": "NULL_REFERENCE",
        "Name": "Null Reference Exception",
        "Pattern": "NullReferenceException|Object reference not set",
        "Severity": "Medium",
        "Category": "Code Quality",
        "IsEnabled": true,
        "Description": "Detects null reference exceptions in the application"
      },
      {
        "Id": "TIMEOUT_ERROR",
        "Name": "Timeout Error",
        "Pattern": "timeout|request timed out|operation timeout",
        "Severity": "Medium",
        "Category": "Performance",
        "IsEnabled": true,
        "Description": "Detects timeout-related errors"
      }
    ],
    "ScanIntervalMinutes": 5,
    "MaxLogRetentionDays": 30,
    "EnableRealTimeScanning": true,
    "ML": {
      "EnableClustering": true,
      "ClusteringAlgorithm": "DBSCAN",
      "MinSamplesForCluster": 3,
      "EpsilonDistance": 0.5,
      "EnableAnomalyDetection": true,
      "AnomalyThreshold": 0.8,
      "TrainingDataSize": 1000,
      "SimilarityThreshold": 0.85,
      "MinClusterSize": 5,
      "MaxFeatures": 10000,
      "EnablePeriodicRetraining": true,
      "RetrainingIntervalHours": 24
    }
  },
  "Notifications": {
    "Slack": {
      "WebhookUrl": "",
      "Channel": "#alerts",
      "Username": "AutoFixer",
      "IconEmoji": ":robot_face:",
      "IsEnabled": false
    },
    "Teams": {
      "WebhookUrl": "",
      "IsEnabled": false
    },
    "Email": {
      "SmtpServer": "",
      "SmtpPort": 587,
      "Username": "",
      "Password": "",
      "FromEmail": "",
      "FromName": "AutoFixer Alert System",
      "UseSsl": true,
      "IsEnabled": false
    }
  },
  "AlertEscalation": {
    "Levels": [
      {
        "Level": 1,
        "ThresholdMinutes": 15,
        "NotificationChannels": [ "Slack" ],
        "Recipients": [ "dev-team" ]
      },
      {
        "Level": 2,
        "ThresholdMinutes": 30,
        "NotificationChannels": [ "Slack", "Email" ],
        "Recipients": [ "dev-team", "tech-leads" ]
      },
      {
        "Level": 3,
        "ThresholdMinutes": 60,
        "NotificationChannels": [ "Slack", "Email", "Teams" ],
        "Recipients": [ "dev-team", "tech-leads", "managers" ]
      }
    ],
    "MaxEscalationLevel": 3,
    "EscalationCheckIntervalMinutes": 5
  },
  "Seq": {
    "ApiUrl": "http://localhost:5341",
    "ApiKey": "",
    "TimeoutSeconds": 30,
    "MaxEventsPerRequest": 10000,
    "InitialLookbackHours": 24
  },
  "NewRelic": {
    "AccountId": "",
    "ApiKey": "",
    "BaseUrl": "https://insights-api.newrelic.com",
    "ApplicationName": "AutoFixer",
    "TimeoutSeconds": 30,
    "MaxEventsPerRequest": 10000
  }
}
